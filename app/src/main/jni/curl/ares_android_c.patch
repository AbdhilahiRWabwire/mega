--- ares_android.c	2018-10-10 23:20:12.000000000 +0200
+++ ares_android_patched.c	2021-02-17 19:39:33.643601031 +0100
@@ -234,6 +234,8 @@
     (*android_jvm)->DetachCurrentThread(android_jvm);
 }
 
+#include "../../mega/sdk/third_party/crashlyticsC.h"
+
 char **ares_get_android_server_list(size_t max_servers,
                                     size_t *num_servers)
 {
@@ -263,6 +265,8 @@
     return NULL;
   }
 
+  crashlytics_context_t* context = crashlytics_init();
+
   res = (*android_jvm)->GetEnv(android_jvm, (void **)&env, JNI_VERSION_1_6);
   if (res == JNI_EDETACHED)
   {
@@ -271,7 +275,12 @@
     need_detatch = 1;
   }
   if (res != JNI_OK || env == NULL)
+  {
+    char buff[130];
+    sprintf(buff, "ares_get_android_server_list: failed to get environment. Error: %d Env: %s", res, (env ? "not-null" : "null"));
+    context->log(context, buff);
     goto done;
+  }
 
   /* JNI below is equivalent to this Java code.
      import android.content.Context;
@@ -297,24 +306,36 @@
   active_network = (*env)->CallObjectMethod(env, android_connectivity_manager,
                                             android_cm_active_net_mid);
   if (active_network == NULL)
+  {
+    context->log(context, "ares_get_android_server_list: failed to get active_network.");
     goto done;
+  }
 
   link_properties =
       (*env)->CallObjectMethod(env, android_connectivity_manager,
                                android_cm_link_props_mid, active_network);
   if (link_properties == NULL)
+  {
+    context->log(context, "ares_get_android_server_list: failed to get link_properties"); 
     goto done;
+  }
 
   server_list = (*env)->CallObjectMethod(env, link_properties,
                                          android_lp_dns_servers_mid);
   if (server_list == NULL)
+  {
+    context->log(context, "ares_get_android_server_list: failed to get server_list");
     goto done;
+  }
 
   nserv = (*env)->CallIntMethod(env, server_list, android_list_size_mid);
   if (nserv > (jint)max_servers)
     nserv = (jint)max_servers;
   if (nserv <= 0)
+  {
+    context->log(context, "ares_get_android_server_list: failed to get nserv");
     goto done;
+  }
   *num_servers = (size_t)nserv;
 
   dns_list = ares_malloc(sizeof(*dns_list)*(*num_servers));
@@ -349,6 +370,9 @@
 
   if (need_detatch)
     (*android_jvm)->DetachCurrentThread(android_jvm);
+
+  crashlytics_free(&context);
+
   return dns_list;
 }
 
