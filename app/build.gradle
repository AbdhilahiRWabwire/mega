apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    defaultConfig {
        applicationId "mega.privacy.android.app"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 347
        versionName "3.8.4 (347)"
        multiDexEnabled true
        ndk.abiFilters 'armeabi-v7a','x86', 'x86_64', 'arm64-v8a'
    }

    sourceSets.main {
        java {
            srcDirs += 'src/main/jni/mega/sdk/bindings/java'
            srcDirs += 'src/main/jni/megachat/sdk/bindings/java'
            exclude '**/MegaApiSwing.java'
        }
        jni.srcDirs = [] //disable automatic ndk-build
        jniLibs.srcDir 'src/main/libs' // This is not necessary unless you have precompiled libraries in your project.
    }

    buildTypes {
        debug {
            //  minifyEnabled false
            //   proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            //  minifyEnabled false
            //  proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        // abortOnError false
    }

    dexOptions{
        jumboMode = true
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }

//    task megaSDK(type: Exec, description: 'Compile MEGA SDK via NDK') {
//        workingDir 'src/main/jni'
//        commandLine './build.sh', 'all'
//    }
//
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn megaSDK
//    }

    flavorDimensions "service"
    productFlavors {
        gms {
            dimension "service"
        }
        hms {
            dimension "service"
            applicationId = "mega.privacy.android.app.huawei"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.github.nirhart:parallaxscroll:1.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.vdurmont:emoji-java:4.0.0'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.11.8'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.11.8'
    implementation(name: 'exoplayer-extension-ffmpeg-2.11.8', ext: 'aar')
    implementation 'com.google.zxing:core:3.4.0'
    implementation 'com.budiyev.android:code-scanner:1.8.3'
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
    implementation 'com.brandongogetap:stickyheaders:0.5.1'
    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.emoji:emoji:1.1.0'
    implementation 'androidx.emoji:emoji-appcompat:1.1.0'
    implementation 'androidx.emoji:emoji-bundled:1.1.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'io.supercharge:shimmerlayout:2.1.0'
    implementation 'net.opacapp:multiline-collapsingtoolbar:27.1.1'
    implementation 'com.github.tony19:named-regexp:0.2.5'
    implementation 'org.hamcrest:hamcrest-library:1.3'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.3'
    implementation 'jp.wasabeef:blurry:2.1.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.10'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
    implementation 'com.facebook.fresco:fresco:2.3.0'
    implementation 'com.facebook.fresco:animated-gif:2.3.0'
    implementation 'com.facebook.fresco:animated-webp:2.3.0'
    implementation 'com.facebook.fresco:webpsupport:2.3.0'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //GMS
    gmsImplementation 'com.google.firebase:firebase-core:18.0.0'
    gmsImplementation 'com.google.firebase:firebase-messaging:21.0.0'
    gmsImplementation 'com.android.billingclient:billing:3.0.1'
    gmsImplementation 'com.google.android.gms:play-services-location:17.1.0'
    gmsImplementation 'com.google.android.gms:play-services-maps:17.0.0'
    gmsImplementation 'com.google.maps.android:android-maps-utils:0.5'

    //HMS
    hmsImplementation 'com.huawei.hms:push:4.0.2.300'
    hmsImplementation 'com.huawei.hms:location:4.0.2.300'
    hmsImplementation 'com.huawei.hms:maps:4.0.1.301'
    hmsImplementation 'com.huawei.hms:iap:4.0.2.300'
}

def taskRequests = gradle.getStartParameter().getTaskRequests().toString()
if (taskRequests.contains("Hms")) {
    apply plugin: 'com.huawei.agconnect'
} else if (taskRequests.contains("Gms")) {
    apply plugin: 'com.google.gms.google-services'
}