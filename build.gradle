apply from: "tools/util.gradle"
// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.gradleVersion = '7.2.2'
    ext.lintVersion = '30.2.2' // = gradleVersion + 23.0.0
    ext.kotlinVersion = '1.7.20'
    ext.navigationVersion = '2.4.2'
    ext.googleServicesVersion = '4.3.10'
    ext.hiltVersion = "2.42"
    ext.firebaseCrashlyticsVersion = "2.8.1"
    ext.firebasePerformanceVersion = "1.4.2"
    ext.firebaseAppDistribution = "3.0.1"
    ext.jacocoVersion = '0.8.8'
    ext.paparazziVersion = "1.0.0"
    ext.jfrogArtifactoryVersion = '4.29.2'
    repositories {
        google()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradleVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationVersion"
        classpath "com.google.gms:google-services:$googleServicesVersion"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hiltVersion"
        classpath "com.google.firebase:firebase-crashlytics-gradle:$firebaseCrashlyticsVersion"
        classpath "com.google.firebase:perf-plugin:$firebasePerformanceVersion"
        classpath "com.google.firebase:firebase-appdistribution-gradle:$firebaseAppDistribution"
        //Jacoco Plugin for code coverage
        classpath "org.jacoco:org.jacoco.core:$jacocoVersion"
        classpath "app.cash.paparazzi:paparazzi-gradle-plugin:$paparazziVersion"
        // jfrog artifactory publish&resolve
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:$jfrogArtifactoryVersion"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven {
            url "https://jitpack.io"
        }
        maven {
            url "${System.env.ARTIFACTORY_BASE_URL}/artifactory/mega-gradle/mega-sdk-android"
        }
    }
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'maven-publish'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Define versions in a single place
ext {
    // App
    appVersion = "7.7"

    // Sdk and tools
    compileSdkVersion = 33
    minSdkVersion = 24
    targetSdkVersion = 33
    buildToolsVerion = '33.0.1'

    // Prebuilt MEGA SDK version
    megaSdkVersion = '20230308.101554-rel'
    
    // App dependencies
    androidxArchCoreVersion = '2.1.0'
    androidxTestExtVersion = '1.1.3'
    androidxTestVersion = '1.4.0'
    appCompatVersion = '1.5.1'
    composeCompilerVersion = '1.3.2'
    composeBomVersion = '2022.10.00'
    coroutineTestVersion = '1.6.0'
    espressoVersion = '3.4.0'
    fragmentTestingVersion = '1.4.1'
    junitVersion = '4.13.2'
    mockitoKotlinVersion = '4.0.0'
    mockitoVersion = '5.1.1'
    roboletricVersion = '4.7.3'
    roomVersion = '2.4.2'
    showkaseVersion = '1.0.0-beta13'
    truthVersion = '1.1.3'
    turbineVersion = '0.7.0'
    workVersion = '2.8.0'
    exifinterfaceVersion = '1.3.0'
}

ext.shouldSuppressWarnings = { ->
    return isCiBuild() && System.getenv("DO_NOT_SUPPRESS_WARNINGS") != 'true'
}

if (!shouldUsePrebuiltSdk() || isCiBuild()) {
    apply from: "$project.rootDir/tools/prebuilt-sdk.gradle"
}
